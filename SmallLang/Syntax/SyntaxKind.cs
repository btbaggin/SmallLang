using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SmallLang.Syntax
{
    public enum SyntaxKind
    {
        AddAssignmentExpression,
        AdditionExpression,
        AndExpression,
        ArgumentExpression,
        ArrayAccessExpression,
        ArrayLiteral,
        AssignmentStatement,
        BinaryExpression,
        BitwiseAndExpression,
        BitwiseOrExpression,
        Block,
        BooleanLiteral,
        Cast,
        CatAssignmentExpression,
        ConcatenateExpression,
        Const,
        DateLiteral,
        DeclarationStatement,
        DecrementExpression,
        DefaultInitializerExpression,
        DivAssignmentExpression,
        DivisionExpression,
        Else,
        EqualsExpression,
        ExplicitCastExpression,
        ExponentExpression,
        Expression,
        FieldDeclaration,
        For,
        FunctionInvocation,
        GreaterThanEqualsExpression,
        GreaterThanExpression,
        GroupAssignmentStatement,
        GroupDeclarationStatement,
        IdentifierGroup,
        Identifier,
        If,
        ImplicitCastExpression,
        Import,
        IncrementExpression,
        LengthQuery,
        LessThanEqualsExpression,
        LessThanExpression,
        LShiftExpression,
        MemberAccess,
        MemberIdentifier,
        Method,
        ModExpression,
        MulAssignmentExpression,
        MultiplicationExpression,
        NamespaceIdentifier,
        NegateExpression,
        NotEqualsExpression,
        NotExpression,
        NumericLiteral,
        OrExpression,
        Parameter,
        Return,
        ReturnValue,
        RShiftExpression,
        SentinelExpression,
        StringLiteral,
        Struct,
        SubAssignmentExpression,
        SubtractionExpression,
        TernaryExpression,
        UnaryExpression,
        ValueDiscard,
        While,
        Workspace
    }
}
